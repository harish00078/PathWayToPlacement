<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Quiz App</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div class="container">
        <div id="start-rules">
            <h2>Welcome to Ninja's Quizz.</h2>
            <h3>Rules:</h3>
            <ul>
                <li>Your quiz will end in 1 minute.</li>
                <li>Your quiz will contain infinite number of questions as we are fetching them from API.</li>
                <li>You would be provided 10 marks for every correct answer.</li>
                <li>There is no negative marking.</li>
                <li>At the end of the game, your score will be displayed.</li>
            </ul>
            <button id="startQuiz">Start Quiz</button>
        </div>
        <div id="quizScreen" class="hidden">
            <div id="question"></div>
            <div id="answers"></div>
            <div id="timer">Time left: 60 seconds</div>
            <div id="scoreDisplay">Score: <span id="score">0</span></div>
        </div>
        <div id="endScreen" class="hidden">
            <h2>Game Over!</h2>
            <p>Improve Your knowledge by playing it again and again.</p>
            <p>You were excellent during the quizz.</p>
            <p>Your score: <span id="finalScore"></span></p>
            <button id="playAgain">Play Again</button>
        </div>
    </div>
    <script src="script.js"></script>
</body>
</html>
body {
    font-family: Arial, sans-serif;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    margin: 0;
    background-color: #f0f0f0;
}

.container {
    background-color: white;
    border-radius: 10px;
    padding: 20px;
    box-shadow: 0 0 10px rgba(0,0,0,0.1);
    max-width: 500px;
    width: 100%;
}

button {
    border: none;
    border-radius: 20px;
    padding: 10px 20px;
    margin: 5px 0;
    cursor: pointer;
    font-size: 16px;
    transition: background-color 0.3s;
    width: 100%;
    text-align: left;
}

#startQuiz, #playAgain {
    background-color: #4CAF50;
    color: white;
    text-align: center;
}

#startQuiz:hover, #playAgain:hover {
    background-color: #45a049;
}

.answer {
    background-color: #6c5ce7;
    color: white;
}

.answer:hover {
    background-color: #5b4ec7;
}

#timer {
    background-color: #ff7675;
    color: white;
    padding: 10px;
    border-radius: 20px;
    text-align: center;
    margin-top: 10px;
}

#scoreDisplay {
    margin-top: 10px;
    text-align: center;
}

.hidden {
    display: none;
}
let score = 0;
let timer = 60;
let interval;

const startRulesDiv = document.getElementById("start-rules");
const quizScreen = document.getElementById("quizScreen");
const endScreen = document.getElementById("endScreen");
const questionDisplay = document.getElementById("question");
const answersDisplay = document.getElementById("answers");
const timerDisplay = document.getElementById("timer");
const scoreDisplay = document.getElementById("score");
const finalScoreDisplay = document.getElementById("finalScore");

document.getElementById("startQuiz").addEventListener("click", startQuiz);
document.getElementById("playAgain").addEventListener("click", startQuiz);

function startQuiz() {
    score = 0;
    timer = 60;
    startRulesDiv.classList.add("hidden");
    endScreen.classList.add("hidden");
    quizScreen.classList.remove("hidden");
    updateScore();
    getQuestion();
    startTimer();
}

async function getQuestion() {
    try {
        const response = await fetch("https://opentdb.com/api.php?amount=1&type=multiple");
        if (!response.ok) throw new Error("API request failed");
        const data = await response.json();
        const question = data.results[0];
        displayQuestion(question);
    } catch (error) {
        console.error("Error fetching question:", error);
        questionDisplay.textContent = "Error loading question. Please try again.";
        answersDisplay.innerHTML = '<button id="retryButton">Retry</button>';
        document.getElementById("retryButton").addEventListener("click", getQuestion);
    }
}

function displayQuestion(question) {
    questionDisplay.innerHTML = question.question;
    const answers = [...question.incorrect_answers, question.correct_answer];
    shuffleArray(answers);
    
    answersDisplay.innerHTML = answers.map(answer => 
        `<button class="answer">${answer}</button>`
    ).join("");

    answersDisplay.querySelectorAll(".answer").forEach(button => {
        button.addEventListener("click", () => checkAnswer(button.textContent, question.correct_answer));
    });
}

function checkAnswer(selectedAnswer, correctAnswer) {
    if (selectedAnswer === correctAnswer) {
        score += 10;
        updateScore();
    }
    getQuestion();
}

function updateScore() {
    scoreDisplay.textContent = score;
}

function startTimer() {
    clearInterval(interval);
    interval = setInterval(() => {
        timer--;
        timerDisplay.textContent = `Time left: ${timer} seconds`;
        if (timer <= 0) {
            endGame();
        }
    }, 1000);
}

function endGame() {
    clearInterval(interval);
    quizScreen.classList.add("hidden");
    endScreen.classList.remove("hidden");
    finalScoreDisplay.textContent = score;
}

function shuffleArray(array) {
    for (let i = array.length - 1; i > 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [array[i], array[j]] = [array[j], array[i]];
    }
}