<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="styles.css">
    <title>Image To Do List</title>
</head>

<body>
    <div class="app-container">
        <h1>Upload Your Image</h1>
        <div class="dropzone" id="dropzone">
            <input type="file" id="fileInput" multiple>
            <p>Drag & Drop or <span>Click to Browse</span></p>
        </div>
        <div class="file-list" id="fileList">
            <!-- Uploaded images will be displayed here -->
        </div>
    </div>
    
    <script src="script.js"></script>
</body>

</html>
document.addEventListener("DOMContentLoaded", function () {
    const dropzone = document.getElementById("dropzone");
    const fileInput = document.getElementById("fileInput");
    const fileList = document.getElementById("fileList");
    const MAX_IMAGES = 5;
  
    // Dropzone functionality
    dropzone.addEventListener("dragover", function (e) {
        e.preventDefault();
        dropzone.classList.add("dragover");
    });
  
    dropzone.addEventListener("dragleave", function () {
        dropzone.classList.remove("dragover");
    });
  
    dropzone.addEventListener("drop", function (e) {
        e.preventDefault();
        dropzone.classList.remove("dragover");
        handleFiles(e.dataTransfer.files);
    });
  
    dropzone.addEventListener("click", function () {
        fileInput.click();
    });
  
    fileInput.addEventListener("change", function () {
        handleFiles(fileInput.files);
    });
  
    function handleFiles(files) {
        const currentImages = fileList.querySelectorAll(".file-item").length;
        if (currentImages + files.length > MAX_IMAGES) {
            alert(`You can upload a maximum of ${MAX_IMAGES} images.`);
            return;
        }
  
        for (const file of files) {
            if (!file.type.startsWith("image/") || file.size > Infinity) {
                alert("Only images below 5MB are allowed.");
                continue;
            }
            displayFile(file);
        }
    }
  
    function displayFile(file) {
        const reader = new FileReader();
  
        reader.onload = function (e) {
            const div = document.createElement("div");
            div.className = "file-item";
  
            const img = document.createElement("img");
            img.src = e.target.result;
            img.alt = file.name;
            img.className = "thumbnail";
            div.appendChild(img);
  
            const textarea = document.createElement("textarea");
            div.appendChild(textarea);
  
            const actionsDiv = document.createElement("div");
            actionsDiv.className = "actions";
  
            const checkIcon = document.createElement("span");
            checkIcon.innerHTML = "&#10003;";
            checkIcon.addEventListener("click", function () {
                alert("Description added.");
                textarea.setAttribute("readonly", "readonly");
            });
            actionsDiv.appendChild(checkIcon);
  
            const deleteIcon = document.createElement("span");
            deleteIcon.innerHTML = "&#10005;";
            deleteIcon.addEventListener("click", function () {
                fileList.removeChild(div);
                saveToLocalStorage();
            });
            actionsDiv.appendChild(deleteIcon);
  
            div.appendChild(actionsDiv);
            fileList.appendChild(div);
            saveToLocalStorage();
        };
  
        reader.readAsDataURL(file);
    }
  
    function saveToLocalStorage() {
        const data = [];
        fileList.querySelectorAll(".file-item").forEach(item => {
            const img = item.querySelector("img").src;
            const description = item.querySelector("textarea").value;
            data.push({ src: img, description });
        });
        localStorage.setItem("storedImagesData", JSON.stringify(data));
    }
  
    function loadFromLocalStorage() {
        const storedImagesData = JSON.parse(localStorage.getItem("storedImagesData") || "[]");
        storedImagesData.forEach(data => {
            const div = document.createElement("div");
            div.className = "file-item";
  
            const img = document.createElement("img");
            img.src = data.src;
            img.className = "thumbnail";
            div.appendChild(img);
  
            const textarea = document.createElement("textarea");
            textarea.value = data.description;
            div.appendChild(textarea);
  
            const actionsDiv = document.createElement("div");
            actionsDiv.className = "actions";
  
            const checkIcon = document.createElement("span");
            checkIcon.innerHTML = "&#10003;";
            checkIcon.addEventListener("click", function () {
                alert("Description added.");
                textarea.setAttribute("readonly", "readonly");
            });
            actionsDiv.appendChild(checkIcon);
  
            const deleteIcon = document.createElement("span");
            deleteIcon.innerHTML = "&#10005;";
            deleteIcon.addEventListener("click", function () {
                fileList.removeChild(div);
                saveToLocalStorage();
            });
            actionsDiv.appendChild(deleteIcon);
  
            div.appendChild(actionsDiv);
            fileList.appendChild(div);
        });
    }
  
    loadFromLocalStorage();
  });
  /* styles.css */
body {
    font-family: Arial, sans-serif;
    background-image:url("carousel2.jpg");
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 100vh;
    margin: 0;
}

.app-container {
    width: 80%;
    max-width: 600px;
    background: rgba(255, 255, 255, 0.762);
    border-radius: 10px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    padding: 20px;
    text-align: center;
}

h1 {
    color: #FF4500;
    margin-bottom: 20px;
}

.dropzone {
    border: 2px dashed rgb(255, 255, 255);;
    padding: 20px;
    margin-bottom: 20px;
    cursor: pointer;
    border-radius: 10px;
    transition: border-color 0.3s;
    position: relative;
}

.dropzone.dragover {
    border-color: #000;
}

.dropzone input[type="file"] {
    display: none;
}

.dropzone p {
    margin: 0;
    color: black;
}

.dropzone span {
    color: #FF4500;
    text-decoration: underline;
    cursor: pointer;
}

.file-list {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.file-item {
    display: flex;
    align-items: center;
    margin-bottom: 10px;
    width: 100%;
    background: #ffffff4b;
    padding: 10px;
    border-radius: 10px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.file-item img {
    width: 100px;
    height: 100px;
    object-fit: cover;
    margin-right: 10px;
    border-radius: 10px;
}

.file-item textarea {
    flex-grow: 1;
    margin-right: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
    padding: 5px;
}

.file-item .actions {
    display: flex;
    gap: 10px;
}

.file-item .actions span {
    cursor: pointer;
    font-size: 20px;
    user-select: none;
}

.file-item .actions span:hover {
    color: #FF4500;
}
