// html working code:
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="styles.css">
    <title>Image To Do List</title>
</head>

<body>

    <div class="carousel">
        <div class="carousel-items">
            <!-- Define you carousel here -->
            
        </div>
    </div>

    <div class="app-container">

        <!-- Define your rest of the things of the Image TODO List app here -->
        
        </div>

        <div class="file-list" id="fileList">
            <!-- Create the space here where your uploaded image will be visible -->
        </div>
        
        
    </div>
    <script src="script.js"></script>
</body>

</html>
// js working code: 
// script.js
document.addEventListener('DOMContentLoaded', () => {
  const dropzone = document.getElementById('dropzone');
  const fileInput = document.getElementById('fileInput');
  const fileList = document.getElementById('fileList');
  const MAX_FILES = 5;

  loadStoredImages();

  dropzone.addEventListener('dragover', (event) => {
      event.preventDefault();
      dropzone.classList.add('dragover');
  });

  dropzone.addEventListener('dragleave', () => {
      dropzone.classList.remove('dragover');
  });

  dropzone.addEventListener('drop', (event) => {
      event.preventDefault();
      dropzone.classList.remove('dragover');
      handleFiles(event.dataTransfer.files);
  });

  dropzone.addEventListener('click', () => {
      fileInput.click();
  });

  fileInput.addEventListener('change', () => {
      handleFiles(fileInput.files);
  });

  function handleFiles(files) {
      if (fileList.children.length + files.length > MAX_FILES) {
          alert('You can only upload a maximum of 5 images.');
          return;
      }

      Array.from(files).forEach(file => {
          if (file.type.startsWith('image/') && file.size <= 1024 * 1024) {
              const reader = new FileReader();
              reader.onload = () => {
                  addImage(reader.result, file.name);
                  saveImages();
              };
              reader.readAsDataURL(file);
          } else {
              alert('Only images under 1MB are allowed.');
          }
      });
  }

  function addImage(src, name) {
      const item = document.createElement('div');
      item.className = 'file-item';

      const img = document.createElement('img');
      img.src = src;

      const textarea = document.createElement('textarea');
      textarea.placeholder = 'Add a description';

      const actions = document.createElement('div');
      actions.className = 'actions';

      const checkIcon = document.createElement('span');
      checkIcon.textContent = '✔';
      checkIcon.addEventListener('click', () => {
          alert('Description has been added.');
          textarea.setAttribute('readonly', 'readonly');
      });

      const deleteIcon = document.createElement('span');
      deleteIcon.textContent = '❌';
      deleteIcon.addEventListener('click', () => {
          fileList.removeChild(item);
          saveImages();
      });

      actions.appendChild(checkIcon);
      actions.appendChild(deleteIcon);

      item.appendChild(img);
      item.appendChild(textarea);
      item.appendChild(actions);

      fileList.appendChild(item);
  }

  function saveImages() {
      const images = [];
      fileList.querySelectorAll('.file-item').forEach(item => {
          const img = item.querySelector('img').src;
          const description = item.querySelector('textarea').value;
          images.push({ img, description });
      });
      localStorage.setItem('images', JSON.stringify(images));
  }

  function loadStoredImages() {
      const images = JSON.parse(localStorage.getItem('images') || '[]');
      images.forEach(({ img, description }) => {
          addImage(img, '');
          fileList.querySelector('.file-item:last-child textarea').value = description;
      });
  }
});
